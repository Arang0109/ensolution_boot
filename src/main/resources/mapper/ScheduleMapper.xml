<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ensolution.ensol.schedule.mapper.ScheduleMapper">
  <select id="selectSchedule" parameterType="int" resultType="ScheduleDto">
    SELECT schedule_id, team_id, stack_measurement_id, measure_date, is_completed
    FROM schedule
    WHERE schedule_id = #{schedule_id}
  </select>

  <select id="selectAll" resultType="ScheduleTableDto">
    SELECT GROUP_CONCAT(DISTINCT s.schedule_id) AS schedule_ids,
           GROUP_CONCAT(DISTINCT s.stack_measurement_id) AS stack_measurement_ids,
           s.team_id, measure_date, stack.stack_name, stack.stack_id,
           workplace.workplace_name, team.team_name, s.is_completed,
           GROUP_CONCAT(DISTINCT pollutant.pollutant_name ORDER BY sm.pollutant_id ASC SEPARATOR ', ') AS pollutants
    FROM schedule s
           INNER JOIN stack_measurement sm ON s.stack_measurement_id = sm.stack_measurement_id
           INNER JOIN stack ON stack.stack_id = sm.stack_id
           INNER JOIN workplace ON workplace.workplace_id = stack.workplace_id
           INNER JOIN team ON team.team_id = s.team_id
           INNER JOIN pollutant ON pollutant.pollutant_id = sm.pollutant_id
    GROUP BY s.team_id,
             measure_date,
             stack.stack_name,
             stack.stack_id,
             workplace.workplace_name,
             team.team_name,
             s.is_completed
    ORDER BY s.measure_date DESC, team.team_name
  </select>

  <select id="selectDetail" parameterType="ScheduleTableDto" resultType="ScheduleTableDto">
    SELECT GROUP_CONCAT(DISTINCT s.schedule_id) AS schedule_ids,
           s.team_id, s.stack_measurement_id, measure_date, stack.stack_name, stack.stack_id,
           workplace.workplace_name, team.team_name, s.is_completed,
           GROUP_CONCAT(DISTINCT pollutant.pollutant_name ORDER BY sm.pollutant_id ASC SEPARATOR ', ') AS pollutants,
           GROUP_CONCAT(DISTINCT pollutant.pollutant_id) AS pollutant_ids
    FROM schedule s
           INNER JOIN stack_measurement sm ON s.stack_measurement_id = sm.stack_measurement_id
           INNER JOIN stack ON stack.stack_id = sm.stack_id
           INNER JOIN workplace ON workplace.workplace_id = stack.workplace_id
           INNER JOIN team ON team.team_id = s.team_id
           INNER JOIN pollutant ON pollutant.pollutant_id = sm.pollutant_id
    WHERE stack.stack_id = #{stack_id} AND measure_date = #{measure_date}
    GROUP BY s.measure_date, sm.stack_id, s.team_id
    ORDER BY s.measure_date DESC, team.team_name
  </select>

  <insert id="insert" parameterType="ScheduleDto">
    INSERT INTO schedule
      (team_id, stack_measurement_id, measure_date, is_completed)
    VALUES
      (#{team_id}, #{stack_measurement_id}, #{measure_date}, #{is_completed})
  </insert>

  <update id="updateComplete" parameterType="list">
    UPDATE schedule
    SET is_completed = true
    WHERE schedule_id IN
    <foreach item="schedule_id" collection="list" open="(" separator="," close=")">
      #{schedule_id}
    </foreach>
  </update>

  <delete id="deleteItems" parameterType="list">
    DELETE FROM schedule
    WHERE schedule_id IN
    <foreach item="schedule_id" collection="list" open="(" separator="," close=")">
      #{schedule_id}
    </foreach>
  </delete>

  <select id="selectStackHistory" parameterType="int" resultType="HistoryDto">
    SELECT
      sch.measure_date, sm.stack_id, sch.team_id, team.team_name, GROUP_CONCAT(DISTINCT sm.pollutant_id ORDER BY sm.pollutant_id ASC) AS pollutant_ids
    FROM schedule sch
           INNER JOIN stack_measurement sm ON sch.stack_measurement_id = sm.stack_measurement_id
           INNER JOIN team ON team.team_id = sch.team_id
    WHERE sch.is_completed = 1 AND sm.stack_id = #{stack_id}
    GROUP BY sch.measure_date, sm.stack_id, sch.team_id, team.team_name
    ORDER BY sch.measure_date DESC
  </select>
</mapper>